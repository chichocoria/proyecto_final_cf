pipeline {
    agent any

    environment {
        REPO_URL = 'https://github.com/chichocoria/proyecto_final_cf.git'
        BRANCH = 'testing' // Cambia esto si necesitas otra rama
        IMAGE_NAME = 'chichocoria/avatares-devops-api'
        DOCKERFILE_PATH = 'avatares-devops/api/Dockerfile'
        CONTEXT = 'avatares-devops/api'
        registryCredential = 'chichocoria-dockerhub'
        VERSION = "${BUILD_NUMBER}"
        SONAR_AUTH_TOKEN = 'SonarQube-Token'
        SONAR_HOST_URL = 'http://192.168.52.237:9000'
        SONARQUBE_PROJECT_KEY = 'devops-codfac'
        SONARQUBE_ENV = 'SonarQube'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: "${BRANCH}", url: "${REPO_URL}"
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'SonarQube'
                    withSonarQubeEnv('SonarQube') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def fullImageName = "${IMAGE_NAME}:${VERSION}"
                    docker.build(fullImageName, "-f ${DOCKERFILE_PATH} ${CONTEXT}")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    def fullImageName = "${IMAGE_NAME}:${VERSION}"
                    docker.withRegistry( '', registryCredential) {
                        docker.image(fullImageName).push()
                    }
                }
            }
        }
    }
}
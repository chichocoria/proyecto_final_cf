pipeline {
//Variables que se utilizan, el repo de dockerhub y la credencial de dockerhub que se cargo en  jenkins.
  environment {
    registryapi = "chichocoria/avatares-devops-api"
    registryweb = "chichocoria/avatares-devops-web"
    registryCredential = 'chichocoria-dockerhub'
    dockerImageapi = ''
    dockerImageweb = ''
  }
  agent any
  stages {
//Clonamos el repo de git
    stage('Cloning Git') {
      steps {
        sh "pwd"
        git branch: "testing", url: 'https://github.com/chichocoria/proyecto_final_cf.git'
      }
    }
//Corremos el docker build para generar la imagen, usamos la variable BUILD_NUMBER para el versionado.
    stage('Building image api') {
      steps{
        script {
          //dockerImageapi = sh 'docker build -t pruebaapi ./avatares-devops/api'
          dockerImageapi = docker.build registryapi + ":$BUILD_NUMBER", "-f ./avatares-devops/api/Dockerfile ./avatares-devops/api"
        }
      }
    }
//Manda la imagen a dockerhub
    stage('Deploy Image api') {
      steps{
        script {
          docker.withRegistry( '', registryCredential ) {
            dockerImageapi.push()
          }
        }
      }
    }
//Hace un remove de la imagen que generamos para dejar todo limpio y tambien elimina los contenedores de prueba generados
    stage('Remove Unused docker image') {
      steps{
        //sh "docker-compose down"  
        sh "docker rmi $registryapi:$BUILD_NUMBER"
      }
    }
  }
}